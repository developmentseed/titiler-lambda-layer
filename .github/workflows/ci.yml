name: CI

on: [push]

env:
  PYTHON_VERSION: '3.9'
  TITILER_VERSION: '0.11.0'

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          context: .
          load: true
          push: false
          tags: lambgeo/titiler:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
            TITILER_VERSION=${{ env.TITILER_VERSION }}

      - name: Create Package
        run: |
          docker run \
            --platform=linux/amd64 \
            --entrypoint bash \
            -v ${{ github.workspace }}:/local \
            --rm lambgeo/titiler:latest \
            /local/scripts/create-lambda-layer.sh

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set module version
        id: titiler_version
        run: |
          echo version=$(docker run --platform=linux/amd64 --entrypoint '' -it --rm lambgeo/titiler:latest python -c'import titiler.core; print(titiler.core.__version__)') >> $GITHUB_OUTPUT

      - name: Print Version
        run: |
          echo ${{ steps.titiler_version.outputs.version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install boto3 click

      - name: Deploy layers
        if: github.ref == 'refs/heads/main'
        run: python scripts/deploy.py ${{ env.PYTHON_VERSION }} ${{ steps.titiler_version.outputs.version }} --deploy
